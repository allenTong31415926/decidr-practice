<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>People Data</title>
</head>
<body>
  <div class="container-fluid mt-4">
    <div class="row">
      <div class="col-12">
        <h1 class="text-center mb-5">People Data</h1>

        <!-- CSV Upload Form -->
        <div class="d-flex justify-content-center mb-4">
          <%= form_tag csv_upload_people_path, multipart: true, class: "d-flex align-items-center gap-3" do %>
            <%= file_field_tag :file, class: "form-control", style: "width: 300px;" %>
            <%= submit_tag "Upload CSV", class: "btn btn-primary" %>
          <% end %>
        </div>

        <!-- People Table -->
        <div class="table-responsive">
          <div class="d-flex justify-content-end mb-3">
            <%= form_tag people_path, method: :get, class: "d-flex" do %>
              <%= text_field_tag :search, params[:search], class: "form-control me-2", style: "width: 300px;", placeholder: "Search all fields..." %>
              <%= submit_tag "Search", class: "btn btn-primary" %>
            <% end %>
          </div>

          <table class="table table-striped table-hover border">
            <thead class="table-primary">
              <tr>
                <th onclick="sortTable(0)" class="sortable">First Name</th>
                <th onclick="sortTable(1)" class="sortable">Last Name</th>
                <th onclick="sortTable(2)" class="sortable">Gender</th>
                <th onclick="sortTable(3)" class="sortable">Weapon</th>
                <th onclick="sortTable(4)" class="sortable">Vehicle</th>
                <th>Locations</th>
                <th>Affiliations</th>
              </tr>
            </thead>
            <tbody>
              <% @people.each do |person| %>
                <tr>
                  <td><%= person.first_name %></td>
                  <td><%= person.last_name %></td>
                  <td><%= person.gender %></td>
                  <td><%= person.weapon %></td>
                  <td><%= person.vehicle %></td>
                  <td><%= person.locations.map(&:name).join(", ") %></td>
                  <td><%= person.affiliations.map(&:name).join(", ") %></td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>

        <!-- Pagination -->
        <nav aria-label="Page navigation" class="mt-4">
          <ul class="pagination justify-content-center align-items-center">
            <li class="page-item <%= @page <= 1 ? 'disabled' : '' %>">
              <%= link_to "Previous", people_path(page: @page - 1, search: params[:search]), class: "page-link", tabindex: (@page <= 1 ? '-1' : nil) %>
            </li>
            <li class="mx-3">
              Page <%= @page %>
            </li>
            <li class="page-item <%= @people.size < 10 ? 'disabled' : '' %>">
              <%= link_to "Next", people_path(page: @page + 1, search: params[:search]), class: "page-link", tabindex: (@people.size < 10 ? '-1' : nil) %>
            </li>
          </ul>
        </nav>
      </div>
    </div>
  </div>

  <%= content_for :head do %>
    <script>
      document.addEventListener('turbo:load', function() {
        window.sortTable = function(columnIndex) {
          const table = document.querySelector('table');
          if (!table) return;

          const tbody = table.querySelector('tbody');
          if (!tbody) return;

          const th = table.querySelectorAll('th')[columnIndex];
          if (!th || !th.classList.contains('sortable')) return;

          const rows = Array.from(tbody.querySelectorAll('tr'));

          // Get current sort direction or default to ascending
          const currentDir = th.getAttribute('data-sort-dir') || 'asc';
          const newDir = currentDir === 'asc' ? 'desc' : 'asc';

          // Reset all sort indicators
          table.querySelectorAll('th').forEach(header => {
            header.removeAttribute('data-sort-dir');
          });

          // Set new sort direction
          th.setAttribute('data-sort-dir', newDir);

          // Sort the rows
          rows.sort((a, b) => {
            const aValue = a.children[columnIndex]?.textContent?.trim() || '';
            const bValue = b.children[columnIndex]?.textContent?.trim() || '';

            if (newDir === 'asc') {
              return aValue.localeCompare(bValue);
            } else {
              return bValue.localeCompare(aValue);
            }
          });

          // Update the table
          tbody.innerHTML = '';
          rows.forEach(row => tbody.appendChild(row));
        }
      });
    </script>
  <% end %>
</body>
</html>

