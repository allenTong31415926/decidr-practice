<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>People Data</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
      padding: 0;
      background-color: #f8f9fa;
    }
    h1 {
      text-align: center;
      color: #343a40;
    }
    .container {
      max-width: 1800px;
      margin: 0 auto;
      padding: 20px;
      background: white;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }
    .csv-section {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-bottom: 30px;
    }
    .csv-section form {
      display: flex;
      gap: 10px;
      margin-top: 10px;
    }
    .csv-section input[type="file"] {
      padding: 8px;
      border: 1px solid #ced4da;
      border-radius: 4px;
    }
    .csv-section button {
      padding: 8px 12px;
      border: none;
      background-color: #007bff;
      color: white;
      border-radius: 4px;
      cursor: pointer;
    }
    .csv-section button:hover {
      background-color: #0056b3;
    }
    .table-section {
      margin-top: 30px;
      overflow-x: auto;
    }
    .table-header {
      display: flex;
      justify-content: flex-end;
      align-items: center;
      margin-bottom: 10px;
    }
    .table-header input[type="text"] {
      padding: 8px;
      border: 1px solid #ced4da;
      border-radius: 4px;
      width: 200px;
    }
    table {
      width: 100%;
      min-width: 1600px;
      border-collapse: collapse;
      margin-top: 10px;
    }
    table th,
    table td {
      padding: 12px 15px;
      text-align: left;
      border: 1px solid #dee2e6;
    }
    table th {
      background-color: #007bff;
      color: white;
    }
    table tr:nth-child(even) {
      background-color: #f8f9fa;
    }
    table tr:hover {
      background-color: #e9ecef;
    }
    .pagination {
      margin: 20px 0;
      text-align: center;
    }
    .pagination a {
      margin: 0 5px;
      padding: 8px 12px;
      border: 1px solid #007bff;
      border-radius: 4px;
      text-decoration: none;
      color: #007bff;
    }
    .pagination a:hover {
      background-color: #007bff;
      color: white;
    }
    .pagination span {
      margin: 0 5px;
      padding: 8px 12px;
      color: #6c757d;
    }
    table th a {
      color: white;
      text-decoration: none;
    }

    table th a:hover {
      text-decoration: underline;
    }

    /* Add these CSS rules */
    th.sortable {
      cursor: pointer;
      position: relative;
      padding-right: 20px; /* Make space for the indicator */
    }

    th.sortable::after {
      content: '▼';
      position: absolute;
      right: 5px;
      opacity: 0.3;
    }

    th.sortable[data-sort-dir="asc"]::after {
      content: '▲';
      opacity: 1;
    }

    th.sortable[data-sort-dir="desc"]::after {
      content: '▼';
      opacity: 1;
    }

    /* Update table headers to add padding */
    table th {
      padding: 12px 15px;
      text-align: left;
      border: 1px solid #dee2e6;
      background-color: #007bff;
      color: white;
      position: relative;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>People Data</h1>

    <!-- CSV Upload Section -->
    <div class="csv-section">
      <form method="post" action="<%= csv_upload_people_path %>" enctype="multipart/form-data">
        <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
        <input type="file" name="file">
        <button type="submit">Upload CSV</button>
      </form>
    </div>

    <!-- People Data Table Section -->
    <div class="table-section">
      <!-- Table Header with Search -->
      <div class="table-header">
        <form method="get" action="<%= people_path %>">
          <input type="text" name="search" placeholder="Search all columns..." value="<%= params[:search] %>">
        </form>
      </div>

      <!-- Data Table -->
      <table>
        <thead>
          <tr>
            <th>ID</th>
            <th class="sortable" onclick="sortTable(1)">First Name</th>
            <th class="sortable" onclick="sortTable(2)">Last Name</th>
            <th class="sortable" onclick="sortTable(3)">Gender</th>
            <th>Locations</th>
            <th>Affiliations</th>
            <th class="sortable" onclick="sortTable(6)">Weapon</th>
            <th class="sortable" onclick="sortTable(7)">Vehicle</th>
          </tr>
        </thead>
        <tbody>
          <% @people.each do |person| %>
            <tr>
              <td><%= person.id %></td>
              <td><%= person.first_name %></td>
              <td><%= person.last_name %></td>
              <td><%= person.gender %></td>
              <td><%= person.locations.map(&:name).join(', ') %></td>
              <td><%= person.affiliations.map(&:name).join(', ') %></td>
              <td><%= person.weapon %></td>
              <td><%= person.vehicle %></td>
            </tr>
          <% end %>
        </tbody>
      </table>

      <!-- Pagination -->
      <div class="pagination">
        <% if @page > 1 %>
          <a href="<%= people_path(page: @page - 1, search: params[:search]) %>">Previous</a>
        <% else %>
          <span>Previous</span>
        <% end %>
        <span>Page <%= @page %></span>
        <% if @people.size == 10 %>
          <a href="<%= people_path(page: @page + 1, search: params[:search]) %>">Next</a>
        <% else %>
          <span>Next</span>
        <% end %>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('turbo:load', function() {
      function sortTable(columnIndex) {
        const table = document.querySelector('table');
        if (!table) return;
        
        const tbody = table.querySelector('tbody');
        if (!tbody) return;
        
        const th = table.querySelectorAll('th')[columnIndex];
        if (!th) return;
        
        const rows = Array.from(tbody.querySelectorAll('tr'));

        // Get current sort direction or default to ascending
        const currentDir = th.getAttribute('data-sort-dir') || 'asc';
        const newDir = currentDir === 'asc' ? 'desc' : 'asc';

        // Reset all sort indicators
        table.querySelectorAll('th').forEach(header => {
          header.removeAttribute('data-sort-dir');
        });

        // Set new sort direction
        th.setAttribute('data-sort-dir', newDir);

        // Sort the rows
        rows.sort((a, b) => {
          const aValue = a.children[columnIndex]?.textContent?.trim() || '';
          const bValue = b.children[columnIndex]?.textContent?.trim() || '';

          if (newDir === 'asc') {
            return aValue.localeCompare(bValue);
          } else {
            return bValue.localeCompare(aValue);
          }
        });

        // Update the table
        tbody.innerHTML = '';
        rows.forEach(row => tbody.appendChild(row));
      }

      // Make sortTable function available globally
      window.sortTable = sortTable;
    });
  </script>
</body>
</html>

